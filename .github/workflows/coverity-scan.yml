name: coverity-scan # ref: ruby/.github/workflows

on: [push, pull_request]
  #schedule:
  #- cron: '0 18 * * *' #daily at 18:00 UTC

env:
  BUILD_TYPE: Release

jobs:
  latest:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies with apt
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq libmysqlclient-dev libxml2-dev libhiredis-dev libpcre3-dev libgmp-dev libcurl4-openssl-dev

      - name: Install libjson-c from source code
        working-directory: ${{runner.workspace}}
        run: (git clone https://github.com/json-c/json-c.git ; mkdir json-c-build; cd json-c-build; cmake ../json-c; make; sudo make install)

      - name: Install libcheck from source code
        working-directory: ${{runner.workspace}}
        run: (git clone https://github.com/libcheck/check ; cd check; autoreconf --install; ./configure; make; sudo make install; sudo cp check_stdint.h /usr/local/include; sudo ldconfig)

      - name: Install onion from source code
        working-directory: ${{runner.workspace}}
        run: (git clone https://github.com/davidmoreno/onion ; mkdir onion-build; cd onion-build; cmake ../onion; make; cd src/onion; sudo make install)

      - name: Install libghthash
        working-directory: ${{runner.workspace}}
        run: (mkdir ght_build && cd ght_build && tar xf $GITHUB_WORKSPACE/software/libghthash-0.5.0-x86_64.tar.gz && cd libghthash-0.5.0-x86_64 && ./configure && make && sudo make install && sudo ldconfig)

      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/linux64 --post-data "token=$TOKEN&project=bmybbs%2Fbmybbs" -O coverity_tool.tgz
          mkdir cov-analysis-linux64
          tar xzf coverity_tool.tgz --strip 1 -C cov-analysis-linux64
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Build with cov-build
        run: |
          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
          cmake -E make_directory ${{runner.workspace}}/build
          cd ${{runner.workspace}}/build
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          cov-build --dir cov-int make

